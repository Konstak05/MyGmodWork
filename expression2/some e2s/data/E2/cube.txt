[Info]
Type:AdvDupe File
Creator:"*{GMA}*|gabe"
Date:09/14/09
Description:"none"
Entities:1
Constraints:0
[More Information]
FileVersion:0.84
AdvDupeVersion:1.85
AdvDupeToolVersion:1.9
AdvDupeSharedVersion:1.72
SerialiserVersion:1.4
WireVersion:1661
Time:05:04 PM
Head:263
HoldAngle:0,-0.899815,0
HoldPos:56.5547,-95.559,80.1853
StartPos:11228.3,6495.28,-404
[Save]
Entities:261AC2B8{;}261B06D8{T:261ADED8;T:261AC2B8;}261B09A8{N:0;N:0;N:0;}2635D6D0{;}261AC920{N:0;N:0.0244140625;N:363.40026855469;}2635DC48{Y:4=T:263563F8;Y:6=Y:5;Y:1=A:24.317,132.525,133.42;Y:7=T:261B06D8;Y:8=T:261AA7B0;Y:10=Y:9;Y:2=V:5.66016,4.8374,136.763;Y:12=Y:11;Y:14=Y:13;Y:20=T:26357910;Y:34=T:261A9608;Y:35=N:0;}261ADED8{;}2635D7C0{Y:18=T:2635D6D0;}2635C910{Y:16=Y:15;}261A7C40{N:-166897705078.13;N:-21263598632.813;N:-6514677429.1992;}261AD640{N:0;N:0;N:0;}261AF2D8{Y:22;}2635C4D8{Y:1=A:24.317,132.525,133.42;Y:2=V:5.66016,4.8374,136.763;Y:3=B:f;}H261AF5D0{N:263=T:2635DC48;}261AF440{N:-0.048828125;N:0;N:364.37072753906;}261AE018{;}261A60C0{;}261AA7B0{T:261AE018;T:261A60C0;}26357910{Y:17=T:2635C910;Y:19=T:2635D7C0;}261A8B90{N:0;N:0;N:0;}261A9608{Y:21=V:11234,6500.12,-267.237;S:"Me"=P:2053190381;Y:23=T:261AF2D8;Y:24=V:7896.03,6074.84,-397.53;Y:25=T:261A8B90;Y:26=T:261AD640;S:"Aim"=S:"";S:"LS"=Y:22;Y:27=T:261AF440;Y:29=Y:28;Y:30=T:261A7C40;Y:31=V:11234,6500.12,-339.969;Y:32=T:261AC920;Y:33=T:261B09A8;}263563F8{N:0=T:2635C4D8;}
Constraints:H25F77CB0{;}
[Dict]
1:"LocalAngle"
2:"LocalPos"
3:"Frozen"
4:"PhysicsObjects"
5:"gmod_wire_expression2"
6:"Class"
7:"_outputs"
8:"_inputs"
9:"Compadre:D"
10:"_name"
11:"models/hunter/blocks/cube025x025x025.mdl"
12:"Model"
13:"@name Compadre:D€@outputs€@persist LastSaidL:array TargetPos:vector TargetVec:vector€@persist Vector:vector CubePos:vector Aim:string Mode:string€€interval(50)€€###Variables###€€LastSaidL = owner():lastSaid():lower():explode(£ £)€€Me = owner()€€MePos = Me:shootPos()€€Cube = entity()€€CubePos = Cube:pos()€€Vector = (MePos+(vec(0,0,80)) - CubePos)*50€€AimPos = (Me:aimPos())€€LS = owner():lastSaid() €€AimPosVec = (AimPos - CubePos)*50000000€€###Chat###€if(first())€{Cube:setMaterial(£phoenix_storms/stripes£)€}€€€elseif(LastSaidL:string(1) == (£!owner£))€{Mode = £owner£}€€elseif(Me:isCrouch())€{€Mode = £aim£}€€elseif (LastSaidL:string(1)== £!remove£) {selfDestruct(), hint(£Chip removed£,1)}€€elseif(LastSaidL:string(1) == £!kill£)€{Mode = £attack£,€    Target = findPlayerByName(LastSaidL:string(2))€  ,hint(£attacking £+Target:name(),3)€,Cube:setMass(500)€}€€    €elseif(LastSaidL:string(1) == £!block£)€{Mode = £block£€    Target = findPlayerByName(LastSaidL:string(2))€}€€€elseif(LastSaidL:string(1) == £!find£)€{Target = findPlayerByName(LastSaidL:string(2))€    ,Mode = £find£€}€€elseif(LastSaidL:string(1) == £!findoff£)€{holoAlpha(1,0)€    Mode = £owner£}€else{Mode = £owner£}€###Random###€€###Modes###€if(Mode ==£owner£ & Mode != £aim£ & Mode != £attack£)€{Cube:setMass(10)€applyForce(Vector + $Vector*5)€}€€elseif(Mode ==£aim£ & Mode != £owner£)€{applyForce(AimPosVec)€    Cube:setMass(5000000)}€€elseif(Mode == £attack£ & Target:name() != ££)€{TargetPos = (Target:pos() + vec(0,0,20))*300€    ,applyForce(TargetPos - CubePos*3000)  €}€€€elseif(Mode == £block£ & Target:name() != ££)€{TargetPos = Target:shootPos() + Target:eye()*50€    ,TargetVec = (TargetPos - CubePos)*55€    applyForce(TargetVec + $TargetVec*5)€Cube:setMass(10)€}€€elseif(Mode == £find£ & Target:name() != ££)€{holoCreate(1)€    ,holoModel(1,£rectangle£)€    ,holoAng(1,ang(90,0,0))€    ,holoPos(1,Target:shootPos() + vec(0,0,450))€    ,applyForce(Vector + $Vector*5)€    ,holoColor(1,vec(random(255),random(255),random(255)))€    ,holoScale(1,vec(1000,10,10))€    ,holoAlpha(1,255)€}€€elseif(Aim == £off£ & Mode == £aim£)€{Mode = £owner£}€"
14:"_original"
15:"phoenix_storms/stripes"
16:"MaterialOverride"
17:"material"
18:"Wires"
19:"WireDupeInfo"
20:"EntityMods"
21:"CubePos"
22:"dupe~!"
23:"LastSaidL"
24:"AimPos"
25:"$TargetVec"
26:"TargetVec"
27:"$Vector"
28:"owner"
29:"Mode"
30:"AimPosVec"
31:"MePos"
32:"Vector"
33:"TargetPos"
34:"_vars"
35:"Skin"
Saved:3
