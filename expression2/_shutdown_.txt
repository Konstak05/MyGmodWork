@name Fat protector AI
@inputs Player2:entity Body:entity Player3:entity Target2:entity TARGETFOUND Teleport TargetPos:vector Head:entity PropHp:entity Prop2:entity Prop3:entity  Prop4:entity Prop5:entity Prop6:entity Prop7:entity PropMaxHealth Damage
@outputs PropHealth Reset Life MAG
@persist DistanceV:vector Target:entity  Player:array  Go String:string Misile1:entity Angle:angle T Timer Cring A C
@trigger 

interval(1)

Distractions = randint(1,3)

if(first()|duped()) {
    MAG = 0.25
    A = 0
}

if(!Player3:isPlayer() & Teleport >= 1 & ((Target2:pos() - Body:pos()):length() > 300)){
 
    RAND1 = randint(-900,900)
    RAND2 = randint(-900,900)
    RAND3 = randint(90,110)  
if(vec(RAND1,RAND2,RAND3):isInWorld()){

    Body:setPos(Target2:pos() + vec(RAND1,RAND2,RAND3))
}
}




if (Go == 1){



if (Target2:pos() != vec(0,0,0) ){
Angle = (Target2:pos() + vec(0,0,60) - Body:pos()):toAngle()

if ((Target2:pos() - Body:pos()):length() < 150 & (Target2:pos() - Body:pos()):length() > 0){

    


Timer+=1
Cring = cos(Timer) *0.1
    
     Body:setAng((Target2:pos() + vec(0,0,60) - Body:pos()):toAngle())
     Body:setPos(Body:pos() + vec(0,0,Cring))
     Body:propFreeze(1)
    BOOM = 1
      A = 0
    
    
    }
    elseif((Target2:pos() - Body:pos()):length() < -1){
    A = A - 10
Angle = (Target2:pos() + vec(0,0,60) - Body:pos()):toAngle()
    Body:propFreeze(0)
         Body:applyAngForce((Body:toLocal(Angle)*1300 - Body:angVel()*20)*shiftL(ang(Body:inertia())))
         Body:applyForce(((Body:forward()* A*MAG ) - Body:vel() - propGravity()* tickInterval())*Body:mass())
    
   }
    elseif((Target2:pos() - Body:pos()):length() < -900){
Angle = (Target2:pos() + vec(0,0,40) - Body:pos()):toAngle()
    Body:propFreeze(0)
         Body:applyAngForce((Body:toLocal(Angle)*1300 - Body:angVel()*20)*shiftL(ang(Body:inertia())))
         Body:applyForce(((Body:forward()* 900*MAG ) - Body:vel() - propGravity()* tickInterval())*Body:mass())
    
   }
    else {
    
     Timer+=2
     Cring = cos(Timer) *0.2
     Body:setPos(Body:pos() + vec(0,0,Cring))
         A = A + 5
         C = C + 5
    if(C > 500){C = 500}
         Body:propFreeze(0)
         Body:applyAngForce((Body:toLocal(Angle)*C/2 - Body:angVel()*20)*shiftL(ang(Body:inertia())))
         Body:applyForce(((Body:forward()* A*MAG ) - Body:vel() - propGravity()* tickInterval())*Body:mass())
        
            noCollideAll(Body,1)
        }
}
}


if (TARGETFOUND == 1){
    Go = 1
    }
else{
    Go = 0
}







if(first()|duped()) {
    timer("Distraction",5000)
    Prop4:setAlpha(0)
    Prop5:setAlpha(0)
    Prop6:setAlpha(0)
    Prop7:setAlpha(0)
    Prop2:setAlpha(255)
    Prop3:setAlpha(255)
}


if(clk("Distraction")){
    
    if (Distractions == 1) {
    Prop2:setAlpha(255)
    Prop3:setAlpha(255)
    Prop4:setAlpha(0)
    Prop5:setAlpha(0)
    Prop6:setAlpha(0)
    Prop7:setAlpha(0)
    timer("Distraction",6000)

    }
    elseif (Distractions == 2) {
    Prop2:setAlpha(0)
    Prop3:setAlpha(0)
    Prop4:setAlpha(255)
    Prop5:setAlpha(255)
    Prop6:setAlpha(0)
    Prop7:setAlpha(0)
    timer("Distraction",4000)

    }
    elseif (Distractions == 3){
    Prop2:setAlpha(0)
    Prop3:setAlpha(0)
    Prop4:setAlpha(0)
    Prop5:setAlpha(0)
    Prop6:setAlpha(255)
    Prop7:setAlpha(255)
    timer("Distraction",5000)

    }

    
}


if(first()|duped()) {
    PropMaxHealth = 4000*MAG
    PropHealth = PropMaxHealth   
    Life = 1
}



if(Damage & Player2:isPlayer()) {
    PropHealth -= Damage
    Reset = 1
} else {
    Reset = 0
}

if(PropHealth <= 0) {
    PropHp:propDelete()   
}
