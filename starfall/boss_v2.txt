--@name Boss v2
--@author Preach and Kon
--@shared

local chip, owner, player, world = chip(), owner(), player(), entity(0)
local time  = 0
local delay = 0.5
local myNumber = 0
local myNumber2 = 0
local lerpX, lerpY = 0,0
local speedMul = 9
local lerpCurX, lerpCurY = 256,256
local m = Matrix()
local xPos,yPos,xSize,ySize = 0,0, 50,50
local xPos2,yPos2,xSize2,ySize2 = 0,0, 50,50
local xPos3,yPos3,xSize3,ySize3 = 0,0, 50,50
local xPos4,yPos4,xSize4,ySize4 = 0,0, 50,50
local xPos5,yPos5,xSize5,ySize5 = 0,0, 50,50
local fallRate = 1.1
local fallRate2 = 1
local fallRate3 = 1.3
local fallRate4 = 1.2
local fallRate5 = 0.001

hook.add("render", "Boss", function()
    render.setColor( Color(0,0,100) )
    render.drawRect( myNumber,myNumber2, 50,50)
    local frameRate = timer.frametime()*speedMul
    
    lerpX = math.lerp(frameRate, lerpX, myNumber)
    lerpY = math.lerp(frameRate, lerpY, myNumber2)
    render.setColor( Color(0,0,255) )
    render.drawRectOutline( lerpX,lerpY, 50,50)
    render.drawRect( lerpX + 60,lerpY + 30, 10,10)
    render.drawRect( lerpX + -20,lerpY + 30 , 10,10)
    render.drawRect( lerpX + 10,lerpY + 10, 10,10)
    render.drawRect( lerpX + 30,lerpY + 10, 10,10)

    render.drawRect( 0,lerpY - 70, 50,200)
    render.drawRect( 470,lerpY - 70, 50,200)
    render.drawRect( lerpX - 70, 470, 200,50)
    render.drawRect( lerpX - 70, 0, 200,50)
    
    local x,y = render.cursorPos()
    render.drawRect( lerpCurX - 5 or 0, lerpCurY - 5, 10, 10)
    lerpCurX = math.lerp( frameRate, lerpCurX, x or 256)
    lerpCurY = math.lerp( frameRate, lerpCurY, y or 256)
    m:setTranslation(Vector(128,128))
    m:setAngles( Angle(0,math.sin(timer.curtime())*360,0 ))
end)

hook.add("think", "2 + 2 is 4 quick maths", function()
    if timer.curtime() < time + delay then return end
    time = timer.curtime()
    
    myNumber  = math.rand(50,450)
    myNumber2 = math.rand(50,450)
end)

hook.add("render", "finish bar", function()
    render.setColor( Color(0,0,200) )
   render.drawRectOutline( 150,0, 200,10)
    --render.pushMatrix( m )
end)


hook.add("render", "Projectile one", function()
    render.setColor( Color(0,0,200) )
    yPos = yPos + fallRate
    render.drawRect(xPos,yPos, 30, 10)
    
    if yPos > 600 - ySize then
        yPos = ySize/2
        xPos = math.random(xSize,500 - xSize)
    end        

end)

hook.add("render", "Projectile two", function()
    render.setColor( Color(0,0,200) )
    yPos2 = yPos2 + fallRate2
    render.drawRect(xPos2,yPos2, 30, 10)
    
    if yPos2 > 600 - ySize2 then
        yPos2 = ySize2/2
        xPos2 = math.random(xSize2,500 - xSize2)
    end        

end)


hook.add("render", "Projectile three", function()
    render.setColor( Color(0,0,200) )
    yPos3 = yPos3 + fallRate3
    render.drawRect(xPos3,yPos3, 30, 10)
    
    if yPos3 > 600 - ySize3 then
        yPos3 = ySize3/2
        xPos3 = math.random(xSize3,500 - xSize3)
    end        

end)

hook.add("render", "Projectile four", function()
    render.setColor( Color(0,0,200) )
    yPos4 = yPos4 + fallRate4
    render.drawRect(xPos4,yPos4, 30, 10)
    
    if yPos4 > 600 - ySize4 then
        yPos4 = ySize4/2
        xPos4 = math.random(xSize4,500 - xSize4)
    end        

end)

hook.add("render", "proccess bar", function()
    render.setColor( Color(0,100,200) )
    yPos5 = yPos5 + fallRate5
    render.drawRect(yPos5 + 150,1, 8, 8)
    
    if yPos5 > 255 - ySize5 then
        yPos5 = ySize5/2
        xPos5 = math.random(xSize5,500 - xSize5)
    end        

end)